Задание:

++1) Добавить компонент UserList

2) В этом компоненте будет выполняться запрос на получение данных getUsers
(файл sources/users), данные также хранятся в стейте UserList

3) отрендреить список пользователей

++4) В запрос getUsers  будет приниматься параметр firstName, он также храниться в стейте,
ему зададите любое значение

5) Пример запроса во вкладке network: /users?firstName=test

++6) В файле дата создать массив объектов
users = [{ firstName: 'test', secondName: 'testovich' }, ..., ..., ...],
кол-во пользователей 5 - 10 на ваш выбор, чтобы можно было увидеть работу поиска
по параметру

7) На сервере сделать гет запрос /users, получить параметр запроса(смотрите пример),
создать в утилах функцию getUsers

8) Вызвать функцию getUsers(наши пользователи users, параметр c запроса firstName)

9) Отфильтровать массив в котором пользователи подходят под наш второй параметр firstName

10) Вернуть с функции массив данных

11) Отправить на клиент

12) На клиенте получить данные, записать в стейт

13) При рендрере списка посмотреть длину массива и если она равно нулю(пустой массив)
то отрендерить строку Нет данных

рендре это обычная функция, пусть вас не смущает реакт(обычный if else)

++14) Посмотрите TODO (по глобальному поиску в проекте ), они подскажут где что писать


// import {getUsers} from "../sources/users";
// import UserList from "./UserList";

// class UserList extends Component {
//     constructor(props) {
//         super(props);
//
//         this.state = {
//             user: [],
//         };
//     }
//
//     componentDidMount() {
//
//         console.log('Выполняем getUser: ', getUsers());
//
//         getUsers({count: this.state.user})
//             .then(({data}) => this.setState({user: data}));
//     }
//
//     render() {
//         const {user} = this.state;
//
//         return (
//             <div>
//                 <h3>Список пользователей</h3>
//                 <UserList users={user}/>
//
//                 {/*TODO рендер компонента здесь*/}
//             </div>
//         );
//     }
// }